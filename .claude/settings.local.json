{
  "permissions": {
    "allow": [
      "Bash(go test:*)",
      "Bash(go build:*)",
      "Bash(grep:*)",
      "Bash(true)",
      "Bash(git pull:*)",
      "Bash(ls:*)",
      "Bash(git add:*)",
      "Bash(go clean:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(git reset:*)",
      "Bash(rm:*)",
      "Bash(curl:*)",
      "Bash(touch:*)",
      "Bash(go run:*)",
      "Bash(git restore:*)",
      "Bash(git push:*)",
      "Bash(HS_RUN_HEALTH_SERVER=false go run main.go)",
      "Bash(pkill:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(./test.sh)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(gh pr create:*)",
      "Bash(golangci-lint:*)",
      "Bash(git tag:*)",
      "Bash(gh release delete:*)",
      "Bash(gh release create:*)",
      "Bash(gh release view:*)",
      "Bash(make:*)",
      "Bash(./hyperserve -version)",
      "Bash(./test-hf-daw --mcp-dev)",
      "Bash(./mcp-flags --mcp-dev)",
      "Bash(go mod:*)",
      "Bash(gh release list:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(claude mcp list:*)",
      "Bash(claude mcp add:*)",
      "Bash(claude mcp remove:*)",
      "mcp__hyperserve__read_file",
      "mcp__hyperserve__server_control",
      "mcp__hyperserve__dev_guide",
      "mcp__hyperserve__request_debugger",
      "mcp__hyperserve__http_request",
      "mcp__hyperserve__route_inspector",
      "Bash(cp:*)",
      "Bash(git fetch:*)",
      "Bash(git stash:*)",
      "Bash(cargo init:*)",
      "Bash(cargo:*)",
      "Bash(npm install:*)",
      "Bash(/dev/null)",
      "Bash(node:*)",
      "Bash(open /tmp/test_websocket.html)",
      "Bash(cat:*)",
      "Bash(python3:*)",
      "Bash(./test.sh:*)",
      "Bash(kill:*)",
      "Bash(open http://127.0.0.1:8082/)",
      "Bash(./target/debug/examples/demucs-api)",
      "Bash(rustc:*)",
      "Bash(true sleep:*)",
      "Bash(./run_benchmarks.sh)",
      "Bash(ab:*)",
      "Bash(./detailed_benchmarks.sh:*)",
      "Bash(./quick_benchmark.sh:*)",
      "Bash(./target/release/examples/basic)",
      "Bash(echo:*)",
      "Bash(./hyperserve-rust-new:*)",
      "Bash(./final_benchmark.sh:*)",
      "Bash(./simple_bench.sh:*)",
      "Bash(ffmpeg:*)"
    ],
    "deny": []
  }
}