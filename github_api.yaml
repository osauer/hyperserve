openapi: 3.1.0
info:
  title: GitHub Repository API
  description:
    API for retrieving files and issues from the specified GitHub repository: `osauer/hyperserve`.
  version: 1.0.0
servers:
  - url: https://api.github.com
    description: GitHub API

paths:
  /repos/osauer/hyperserve/contents/{path}:
    get:
      operationId: getFileContents
      summary: Retrieve the contents of a file in the repository `osauer/hyperserve`
      description: Get the contents of a file or directory in the `osauer/hyperserve` repository.
      parameters:
        - name: path
          in: path
          required: true
          description: The file path in the repository.
          schema:
            type: string
        - name: ref
          in: query
          required: false
          description:
            The name of the commit/branch/tag. Default: the repositoryâ€™s default branch.
          schema:
            type: string
      responses:
        '200':
          description: File contents retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: Type of content (file, directory, etc.).
                  encoding:
                    type: string
                    description: Encoding of the content, if applicable.
                  content:
                    type: string
                    description: The base64-encoded content of the file.
        '404':
          description: File not found.

  /repos/osauer/hyperserve/issues:
    get:
      operationId: listRepositoryIssues
      summary: List issues for the repository `osauer/hyperserve`
      description: Retrieve a list of issues in the `osauer/hyperserve` repository.
      parameters:
        - name: state
          in: query
          required: false
          description:
            Filter issues by state. Can be either open, closed, or all. Default: open.
          schema:
            type: string
            enum: [ open, closed, all ]
        - name: labels
          in: query
          required: false
          description: A comma-separated list of label names to filter by.
          schema:
            type: string
        - name: sort
          in: query
          required: false
          description:
            The property to sort the results by. Can be created, updated, comments. Default: created.
          schema:
            type: string
            enum: [ created, updated, comments ]
        - name: direction
          in: query
          required: false
          description:
            The direction to sort the results. Can be asc or desc. Default: desc.
          schema:
            type: string
            enum: [ asc, desc ]
      responses:
        '200':
          description: Issues retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Issue ID.
                    title:
                      type: string
                      description: Title of the issue.
                    body:
                      type: string
                      description: Body content of the issue.
                    state:
                      type: string
                      description: State of the issue (open or closed).
                    created_at:
                      type: string
                      format: date-time
                      description: When the issue was created.
                    updated_at:
                      type: string
                      format: date-time
                      description: When the issue was last updated.
                    labels:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          color:
                            type: string
                    user:
                      type: object
                      properties:
                        login:
                          type: string
                          description: Username of the issue creator.
                        id:
                          type: integer
                          description: User ID.
        '404':
          description: Repository not found.